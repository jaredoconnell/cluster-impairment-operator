#  Copyright 2021 Red Hat, Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: "{{ daemonset_name }}"
{% if correct_namespace == "cluster-impairment-operator" %}
  namespace: cluster-impairment-operator
{% else %}
  namespace: "{{ lookup('env', 'POD_NAMESPACE') }}"
{% endif %}
  labels:
    k8s-app: "{{ daemonset_name }}"
spec:
  selector:
    matchLabels:
      name: "{{ daemonset_name }}"
  template:
    metadata:
      labels:
        name: "{{ daemonset_name }}"
    spec:
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
{% if node_selector is defined %}
      nodeSelector:
        "{{ node_selector.key }}": "{{ node_selector.value }}"
{% endif %}
      containers:
        - name: impairment-worker
          image: "{{ lookup('env', 'WORKER_IMG') }}"
          env:
          - name: INTERFACE
            value: "{{ impairment_interface_list }}"
          # Ingress
{% if ingress is defined %}
          # Ingress bandwidth
{% if ingress.bandwidth is defined %}
          - name: INGRESS_BANDWIDTH_LIMIT
            value: "{{ ingress.bandwidth }}"
{% endif %}
          # Ingress latency
{% if ingress.latency is defined %}
          - name: INGRESS_LATENCY
            value: "{{ ingress.latency }}"
{% endif %}
          # Ingress packet loss
{% if ingress.loss is defined %}
          - name: INGRESS_PACKET_LOSS
            value: "{{ ingress.loss }}"
{% endif %}
{% endif %}
          # Egress
{% if egress is defined %}
          # Egress bandwidth
{% if egress.bandwidth is defined %}
          - name: EGRESS_BANDWIDTH_LIMIT
            value: "{{ egress.bandwidth }}"
{% endif %}
          # Egress latency
{% if egress.latency is defined %}
          - name: EGRESS_LATENCY
            value: "{{ egress.latency }}"
{% endif %}
          # Egress packet loss
{% if egress.loss is defined %}
          - name: EGRESS_PACKET_LOSS
            value: "{{ egress.loss }}"
{% endif %}
{% endif %}

# Duration or end time
          - name: START_TIME
            value: "{{ start_time_epoch }}"
{% if end_time_epoch is defined %}
          - name: END_TIME
            value: "{{ end_time_epoch }}"
{% else %}
          - name: DURATION
            value: "-1"
{% endif %}
          # Link Flapping Enabled
{% if link_flapping.enable is defined %}
          - name: LINK_FLAPPING
            value: "{{ link_flapping.enable }}"
{% endif %}
          # Link Flapping Down Time
{% if link_flapping.down_time is defined %}
          - name: LINK_FLAP_DOWN_TIME
            value: "{{ link_flapping.down_time }}"
{% endif %}
          # Link Flapping Up Time
{% if link_flapping.up_time is defined %}
          - name: LINK_FLAP_UP_TIME
            value: "{{ link_flapping.up_time }}"
{% endif %}
#          - name: DRY_RUN
#            value: "true"
          securityContext:
            privileged: true
          volumeMounts:
          - mountPath: /lib/modules
            name: modprobe-modules-dir
      volumes:
      - name: modprobe-modules-dir
        hostPath:
          path: /lib/modules
      hostNetwork: true
      dnsPolicy: Default
      serviceAccountName: network-access-sa
